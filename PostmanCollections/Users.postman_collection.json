{
	"info": {
		"_postman_id": "476135b8-2689-4d01-8fa9-23ddc9a67686",
		"name": "Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21628574",
		"_collection_link": "https://restless-escape-724246.postman.co/workspace/MyProjectJK~094f42a5-9e89-4558-8ebb-234baad6ce70/collection/21628574-476135b8-2689-4d01-8fa9-23ddc9a67686?action=share&source=collection_link&creator=21628574"
	},
	"item": [
		{
			"name": "Senarios Failing",
			"item": [
				{
					"name": "No User/Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response JSON\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Check if the status code is 404\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"// Define the request body with the data you want to update\r",
									"const updatedUserData = {\r",
									"    \"username\": \"test\",\r",
									"    \"email\": \"test@test\",\r",
									"    \"userType\": \"Admin\"\r",
									"};\r",
									"\r",
									"// Make the PUT request to update the user by ID\r",
									"pm.sendRequest({\r",
									"    url: pm.variables.get(\"baseURL\") + '/api/users/{{userId}}', \r",
									"    method: 'PUT',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify(updatedUserData),\r",
									"    },\r",
									"}, function (err, response) {\r",
									"    // Check if the request was successful (status code 404)\r",
									"    pm.test(\"Status code is 404\", function () {\r",
									"        pm.response.to.have.status(404);\r",
									"    });\r",
									"\r",
									" \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"billllll jjjjjjmjkk\",\r\n    \"email\": \"bijjjjjll\",\r\n    \"userType\": \"Admin\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/659bfa3ad51cae2d4366bf05",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"659bfa3ad51cae2d4366bf05"
							]
						}
					},
					"response": []
				},
				{
					"name": "No User/Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response JSON\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Check if the status code is 404\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/659bccee1c10b82eb08fbb14",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"659bccee1c10b82eb08fbb14"
							]
						}
					},
					"response": []
				},
				{
					"name": "No User/Get Users by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response JSON\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Check if the status code is 404\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/660427cbf90595446c374128",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"660427cbf90595446c374128"
							]
						}
					},
					"response": []
				},
				{
					"name": "Existing User/Add user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response JSON\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Check if the status code is 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"AdminUser5cg5tt5hg\",\r\n  \"password\": \"admin@email.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "missing field/Add user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response JSON\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// Check if the status code is 400\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"AdminUser5cg5tt5\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Check if the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"jkingh\",\r\n  \"password\": \"jkingh\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Check if the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"john kinghhj\",\r\n  \"password\": \"admin@email.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Check if the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Check if the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/65bd0d04bb2268af9f8ac23c",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"65bd0d04bb2268af9f8ac23c"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Check if the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Define the request body with the data you want to update\r",
							"const updatedUserData = {\r",
							"    \"username\": \"test\",\r",
							"    \"email\": \"test@test\",\r",
							"    \"userType\": \"Admin\"\r",
							"};\r",
							"\r",
							"// Make the PUT request to update the user by ID\r",
							"pm.sendRequest({\r",
							"    url: pm.variables.get(\"baseURL\") + '/api/users/{{userId}}', \r",
							"    method: 'PUT',\r",
							"    header: {\r",
							"        'Content-Type': 'application/json',\r",
							"    },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify(updatedUserData),\r",
							"    },\r",
							"}, function (err, response) {\r",
							"    // Check if the request was successful (status code 200)\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"\r",
							"    // Check if the response is a JSON\r",
							"    pm.test(\"Response should be JSON\", function () {\r",
							"        pm.response.to.have.jsonBody();\r",
							"    });\r",
							"\r",
							"    // Check if the response contains the updated user data\r",
							"    pm.test(\"Response should contain updated user data\", function () {\r",
							"        const jsonData = pm.response.json();\r",
							"        pm.expect(jsonData).to.have.property('message', 'User updated successfully');\r",
							"        pm.expect(jsonData).to.have.property('updatedUser');\r",
							"    });\r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"billllll jjjjjjmjkk\",\r\n    \"email\": \"bijjjjjll\",\r\n    \"userType\": \"Admin\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/659bfa3ad51cae2d4366bf09",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"659bfa3ad51cae2d4366bf09"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"// Check if the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/659bccee1c10b82eb08fbb14",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"659bccee1c10b82eb08fbb14"
					]
				}
			},
			"response": []
		}
	]
}